{"version":3,"sources":["store/reducers.js","store/actions.js","store/actionTitles.js","components/NavBar.js","components/Orders.js","components/EmailTemplates.js","components/History.js","components/ContactUs.js","App.js","serviceWorker.js","index.js"],"names":["initialState","orders","sendOrders","dispatch","sendOrdersError","sendPostOrdersRequest","filter","o","isChecked","a","fetch","method","body","JSON","stringify","headers","response","json","type","payload","data","getOrders","fetchOrdersRequest","then","items","parse","map","item","receiveOrders","catch","err","selectOrder","name","console","log","order","productName","toLowerCase","useStyles","makeStyles","theme","createStyles","root","flexGrow","menuButton","marginRight","spacing","title","button","margin","connect","state","bindActionCreators","props","classes","Grid","container","direction","justify","Button","variant","color","className","endIcon","onClick","table","minWidth","maxWidth","marginTop","marginBottom","padding","selected","backgroundColor","none","useEffect","xs","TableContainer","component","Paper","Table","aria-label","TableHead","TableRow","TableCell","align","TableBody","row","i","event","key","scope","Checkbox","checked","value","id","sku","basePrice","quantity","country","city","first_name","last_name","disabled","length","EmailTemplates","History","ContactUs","loggerMiddleware","createLogger","store","createStore","action","applyMiddleware","thunkMiddleware","history","createBrowserHistory","display","drawer","breakpoints","up","width","flexShrink","appBar","marginLeft","toolbar","mixins","drawerPaper","content","initialisation","top","left","height","position","zIndex","alignItems","justifyContent","fontSize","App","window","useTheme","React","useState","mobileOpen","setMobileOpen","handleDrawerToggle","List","link","text","index","to","ListItem","ListItemIcon","ListItemText","primary","undefined","document","CssBaseline","AppBar","Toolbar","IconButton","edge","Typography","noWrap","md","sm","Hidden","smUp","implementation","Drawer","anchor","open","onClose","paper","ModalProps","keepMounted","xsDown","path","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"wSAUaA,EAAe,CACxBC,OAAQ,I,+FCACC,EAAa,SAACD,GACvB,OAAO,SAAAE,GACHA,EAASC,K,sCAETC,CADuBJ,EAAOK,QAAO,SAAAC,GAAC,OAAIA,EAAEC,aACNL,K,4CAI9C,WAAqCF,EAAQE,GAA7C,iBAAAM,EAAA,+EAE+BC,IAAM,mCAAoC,CAC7DC,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CAAEb,WACvBc,QAAS,CACL,eAAgB,sBANhC,cAEcC,EAFd,gBAS2BA,EAASC,OATpC,cAScA,EATd,yBAUe,CACHC,KCjBuB,sBDkBvBC,QAASF,EAAKG,OAZ1B,kCAeQjB,EAASC,KAfjB,mE,sBAmBA,SAASA,IACL,MAAO,CACHc,KC1ByB,oBD2BzBC,QAAS,IAOV,IAAME,EAAY,SAACpB,GACtB,OAAO,SAAAE,GAEH,OADAA,EA2BR,SAA4BF,GACxB,MAAO,CACHiB,KCvE4B,uBDwE5BC,QAASlB,GA9BAqB,CAAmBrB,IACrBS,IAAM,oCACRa,MAAK,SAAAP,GAAQ,OAAIA,EAASC,UAC1BM,MAAK,SAAAH,GAAI,OAAIjB,EAK1B,SAAuBqB,GACnB,IAAIvB,EAASY,KAAKY,MAAMZ,KAAKC,UAAUU,IAKvC,MAAO,CACHN,KCxD4B,uBDyD5BC,QANJlB,EAASA,EAAOyB,KAAI,SAAAC,GAEhB,OADAA,EAAI,WAAgB,EACbA,MAToBC,CAAcR,OACpCS,OAAM,SAAAC,GAAG,OAAI3B,EAiBf,CACHe,KC9D0B,qBD+D1BC,QAAS,UAWV,IAAMY,EAAc,SAAC9B,EAAQ+B,GAShC,OARAC,QAAQC,IAAIjC,GAQL,CACHiB,KC9E2B,sBD+E3BC,QATJlB,EAASA,EAAOyB,KAAI,SAACS,GAKjB,OAJiBA,EAAMC,YAAYC,gBAClBL,EAAKK,gBAClBF,EAAM3B,WAAa2B,EAAM3B,WAEtB2B,OEhFTG,EAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACXC,KAAM,CACJC,SAAU,GAEZC,WAAY,CACVC,YAAaL,EAAMM,QAAQ,IAE7BC,MAAO,CACLJ,SAAU,GAEZK,OAAQ,CACJC,OAAQ,4BAgChB,IAYeC,eAZS,SAACC,GACvB,MAAO,CACHlD,OAAQkD,EAAMlD,WAIM,SAACE,GACzB,MAAO,CACHkB,UAAW+B,YAAmB/B,EAAWlB,MAIhC+C,EAvCR,SAAgBG,GACrB,IAAMC,EAAUhB,IAERjB,EAAsBgC,EAAtBhC,UAAWpB,EAAWoD,EAAXpD,OAGnB,OACI,kBAACsD,EAAA,EAAD,CACEC,WAAS,EACTC,UAAU,MACVC,QAAQ,cAER,kBAACC,EAAA,EAAD,CACEC,QAAQ,WACRC,MAAM,UACNC,UAAWR,EAAQN,OACnBe,QAAS,kBAAC,IAAD,MACTC,QAAS,WAAQ3C,EAAUpB,KAL7B,qB,wFCpBFqC,EAAYC,YAAW,CACzB0B,MAAO,CACHC,SAAU,IACVC,SAAU,KACVlB,OAAQ,UAEZD,OAAQ,CACJoB,UAAW,GACXC,aAAc,GACdC,QAAS,aAEbC,SAAU,CACNC,gBAAiB,aAErBC,KAAM,CACFD,gBAAiB,UAoEzB,IAcetB,eAdS,SAACC,GACrB,MAAO,CACHlD,OAAQkD,EAAMlD,WAII,SAACE,GACvB,MAAO,CACH4B,YAAaqB,YAAmBrB,EAAa5B,GAC7CkB,UAAW+B,YAAmB/B,EAAWlB,GACzCD,WAAYkD,YAAmBlD,EAAYC,MAIpC+C,EA5ER,SAAgBG,GACnB,IAAMC,EAAUhB,IAERpC,EAA8CmD,EAA9CnD,WAAYmB,EAAkCgC,EAAlChC,UAAWU,EAAuBsB,EAAvBtB,YAAa9B,EAAUoD,EAAVpD,OAU5C,OAJAyE,qBAAU,WACNrD,EAAU,MACX,IAGC,kBAACkC,EAAA,EAAD,CAAM5B,MAAI,EAACgD,GAAI,IACX,kBAAC,EAAD,MACA,kBAACC,EAAA,EAAD,CAAgBC,UAAWC,KACvB,kBAACC,EAAA,EAAD,CAAOjB,UAAWR,EAAQW,MAAOe,aAAW,gBACxC,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,eACA,kBAACA,EAAA,EAAD,iBACA,kBAACA,EAAA,EAAD,CAAWC,MAAM,UAAjB,gBACA,kBAACD,EAAA,EAAD,CAAWC,MAAM,UAAjB,OACA,kBAACD,EAAA,EAAD,CAAWC,MAAM,UAAjB,cACA,kBAACD,EAAA,EAAD,CAAWC,MAAM,UAAjB,YACA,kBAACD,EAAA,EAAD,CAAWC,MAAM,UAAjB,YACA,kBAACD,EAAA,EAAD,CAAWC,MAAM,UAAjB,mBAGR,kBAACC,EAAA,EAAD,KACKpF,EAAOyB,KAAI,SAAC4D,EAAKC,GAAN,OACR,kBAACL,EAAA,EAAD,CAAUpB,UAAWwB,EAAI9E,UAAY8C,EAAQiB,SAAWjB,EAAQmB,KAAMT,QAAS,SAACwB,GAAD,OAAWzD,EAAY9B,EAAQqF,EAAIlD,cAAcqD,IAAKF,GACjI,kBAACJ,EAAA,EAAD,CAAWN,UAAU,KAAKa,MAAM,OAC5B,kBAACC,EAAA,EAAD,CAAUC,QAASN,EAAI9E,UAAWqF,MAAOP,EAAI9E,aAEjD,kBAAC2E,EAAA,EAAD,CAAWN,UAAU,KAAKa,MAAM,OAAOJ,EAAIQ,IAC3C,kBAACX,EAAA,EAAD,CAAWC,MAAM,UAAUE,EAAIlD,aAC/B,kBAAC+C,EAAA,EAAD,CAAWC,MAAM,UAAUE,EAAIS,KAAO,KACtC,kBAACZ,EAAA,EAAD,CAAWC,MAAM,UAAUE,EAAIU,WAC/B,kBAACb,EAAA,EAAD,CAAWC,MAAM,UAAUE,EAAIW,UACnC,kBAACd,EAAA,EAAD,CAAWC,MAAM,UAAUE,EAAIY,QAA/B,KAA0CZ,EAAIa,MAC9C,kBAAChB,EAAA,EAAD,CAAWC,MAAM,UAAUE,EAAIc,WAA/B,IAA4Cd,EAAIe,kBAMhE,kBAAC1C,EAAA,EAAD,CACIC,QAAQ,YACRC,MAAM,UACNyC,UA7CArG,EAAOK,QAAO,SAAC6B,GAAD,OAAWA,EAAM3B,aAAW+F,OA8C1CzC,UAAWR,EAAQN,OACnBe,QAAS,kBAAC,IAAD,MACTC,QAAS,SAACwB,GAAD,OAAWtF,EAAWD,KANnC,Y,6KCrFNqC,I,MAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACX2B,UAAW,CACTA,UAAW,WAKF,SAASoC,KACtB,IAAMlD,EAAUhB,KAEhB,OACE,yBAAKwB,UAAWR,EAAQc,WACtB,gDCdN,IAAM9B,GAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACX2B,UAAW,CACTA,UAAW,UAKF,SAASqC,KACtB,IAAMnD,EAAUhB,KAEhB,OACE,yBAAKwB,UAAWR,EAAQc,WACtB,gDCXN,IAAM9B,GAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACX2B,UAAW,CACTA,UAAW,UAKF,SAASsC,KACtB,IAAMpD,EAAUhB,KAEhB,OACE,yBAAKwB,UAAWR,EAAQc,WACtB,gD,sBCYAuC,GAAmBC,0BAEnBC,GAAQC,aRlBa,WAAmC,IAAlC3D,EAAiC,uDAAzBnD,EAAc+G,EAAW,uCACzD,OAAQA,EAAO7F,MACX,IEA2B,sBFO3B,IEf4B,uBFsB5B,IErB4B,uBF4B5B,IE3B0B,qBFkC1B,IEhC2B,sBFuC3B,IEtC2B,sBF6C3B,IE5CyB,oBF8CjB,OAAO,2BACAiC,GADP,IAEIlD,OAAQ8G,EAAO5F,UAI3B,QAEI,OAAOgC,KQlCjB6D,YACEC,KACAN,KAGEO,GAAUC,eAIV7E,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCE,KAAM,CACJ0E,QAAS,QAEXC,OAAO,eACJ7E,EAAM8E,YAAYC,GAAG,MAAQ,CAC5BC,MARc,IASdC,WAAY,IAGhBC,OAAO,eACJlF,EAAM8E,YAAYC,GAAG,MAAQ,CAC5BC,MAAM,eAAD,OAdS,IAcT,OACLG,WAfc,MAkBlB/E,WAAW,aACTC,YAAaL,EAAMM,QAAQ,IAC1BN,EAAM8E,YAAYC,GAAG,MAAQ,CAC5BH,QAAS,SAIbQ,QAASpF,EAAMqF,OAAOD,QACtBE,YAAa,CACXN,MA3BgB,KA6BlBO,QAAS,CACPpF,SAAU,EACV2B,QAAS9B,EAAMM,QAAQ,IAEzBkF,eAAgB,CACdC,IAAK,MACLC,KAAM,MACNV,MAAO,QACPW,OAAQ,OACRlF,OAAQ,SACRmF,SAAU,WACV5D,gBAAiB,QACjB6D,OAAQ,IACRjB,QAAS,OACTkB,WAAY,SACZC,eAAgB,SAChBC,SAAU,aAwICC,OApIf,SAAapF,GAAQ,IACTqF,EAAWrF,EAAXqF,OACFpF,EAAUhB,KACVE,EAAQmG,cAHE,EAIoBC,IAAMC,UAAS,GAJnC,mBAITC,EAJS,KAIGC,EAJH,KAMVC,EAAqB,WACvBD,GAAeD,IAsBbzB,EACF,6BACE,yBAAKvD,UAAWR,EAAQsE,UACxB,kBAACqB,EAAA,EAAD,KAtBQ,CACV,CACIC,KAAM,IACNC,KAAM,UAEV,CACID,KAAM,aACNC,KAAM,mBAEV,CACID,KAAM,WACNC,KAAM,WAEV,CACID,KAAM,cACNC,KAAM,eAQCzH,KAAI,SAACC,EAAMyH,GAAP,OACT,kBAAC,KAAD,CAAMC,GAAI1H,EAAKuH,KAAMzD,IAAK2D,GACxB,kBAACE,EAAA,EAAD,CAAUtG,QAAM,EAACyC,IAAK9D,EAAKwH,MACvB,kBAACI,EAAA,EAAD,KAAeH,EAAQ,IAAM,EAAI,kBAAC,KAAD,MAAkB,kBAAC,IAAD,OACnD,kBAACI,EAAA,EAAD,CAAcC,QAAS9H,EAAKwH,cAStC3F,OAAuBkG,IAAXhB,EAAuB,kBAAMA,IAASiB,SAAS/I,WAAO8I,EAExE,OACI,kBAAC,IAAD,CAAU7C,MAAOA,IACb,yBAAK/C,UAAU,OACf,yBAAKA,UAAWR,EAAQ0E,gBACtB,wDAEF,kBAAC4B,EAAA,EAAD,MACA,kBAACC,EAAA,EAAD,CAAQzB,SAAS,QAAQtE,UAAWR,EAAQoE,QACxC,kBAACoC,GAAA,EAAD,KACA,kBAACC,GAAA,EAAD,CACIlG,MAAM,UACNmB,aAAW,cACXgF,KAAK,QACLhG,QAASgF,EACTlF,UAAWR,EAAQV,YAEnB,kBAAC,KAAD,OAEJ,kBAACqH,GAAA,EAAD,CAAYrG,QAAQ,KAAKsG,QAAM,GAA/B,aAKA,kBAAC,KAAD,CAAQhD,QAASA,IACb,kBAAC3D,EAAA,EAAD,CAAMC,WAAS,EAACV,QAAS,GACrB,kBAACS,EAAA,EAAD,CAAM5B,MAAI,EAACwI,GAAI,EAAGC,GAAI,GACtB,yBAAKtG,UAAWR,EAAQ+D,OAAQrC,aAAW,mBAEvC,kBAACqF,EAAA,EAAD,CAAQC,MAAI,EAACC,eAAe,OAC5B,kBAACC,EAAA,EAAD,CACIhH,UAAWA,EACXI,QAAQ,YACR6G,OAA4B,QAApBjI,EAAMiB,UAAsB,QAAU,OAC9CiH,KAAM5B,EACN6B,QAAS3B,EACT1F,QAAS,CACTsH,MAAOtH,EAAQwE,aAEf+C,WAAY,CACZC,aAAa,IAGZzD,IAGL,kBAACgD,EAAA,EAAD,CAAQU,QAAM,EAACR,eAAe,OAC9B,kBAACC,EAAA,EAAD,CACIlH,QAAS,CACTsH,MAAOtH,EAAQwE,aAEflE,QAAQ,YACR8G,MAAI,GAEHrD,MAKT,kBAAC9D,EAAA,EAAD,CAAM5B,MAAI,EAACgD,GAAI,GACX,kBAAC,KAAD,KACI,kBAAC,KAAD,CAAOqG,KAAK,cACR,kBAACxE,GAAD,OAEJ,kBAAC,KAAD,CAAOwE,KAAK,YACR,kBAAC,GAAD,OAEJ,kBAAC,KAAD,CAAOA,KAAK,eACR,kBAACtE,GAAD,OAEJ,kBAAC,KAAD,CAAOsE,KAAK,cACR,kBAACxE,GAAD,OAEJ,kBAAC,KAAD,CAAOwE,KAAK,KACR,kBAAC,EAAD,cCvMhBC,QACW,cAA7BvC,OAAOwC,SAASC,UAEe,UAA7BzC,OAAOwC,SAASC,UAEhBzC,OAAOwC,SAASC,SAASC,MACvB,2D,MCVNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,GAAD,OAEF5B,SAAS6B,eAAe,SDuHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBpK,MAAK,SAAAqK,GACJA,EAAaC,gBAEdhK,OAAM,SAAAiK,GACL7J,QAAQ6J,MAAMA,EAAMC,c","file":"static/js/main.4baee1a5.chunk.js","sourcesContent":["import {\n    ACTION_SELECT_ORDER,\n    FETCH_ORDERS_REQUEST,\n    FETCH_ORDERS_SUCCESS,\n    FETCH_ORDERS_ERROR,\n    SEND_ORDERS_REQUEST,\n    SEND_ORDERS_SUCCESS,\n    SEND_ORDERS_ERROR\n} from './actionTitles';\n\nexport const initialState = {\n    orders: []\n};\n\nexport const rootReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case ACTION_SELECT_ORDER:\n            {\n                return {\n                    ...state,\n                    orders: action.payload\n                };\n            }\n        case FETCH_ORDERS_REQUEST:\n            {\n                return {\n                    ...state,\n                    orders: action.payload\n                };\n            }\n        case FETCH_ORDERS_SUCCESS:\n            {\n                return {\n                    ...state,\n                    orders: action.payload\n                };\n            }\n        case FETCH_ORDERS_ERROR:\n            {\n                return {\n                    ...state,\n                    orders: action.payload\n                };\n            }\n        case SEND_ORDERS_REQUEST:\n            {\n                return {\n                    ...state,\n                    orders: action.payload\n                };\n            }\n        case SEND_ORDERS_SUCCESS:\n            {\n                return {\n                    ...state,\n                    orders: action.payload\n                };\n            }\n        case SEND_ORDERS_ERROR:\n            {\n                return {\n                    ...state,\n                    orders: action.payload\n                };\n            }\n\n        default:\n            // the dispatched action is not in this reducer, return the state unchanged\n            return state;\n    }\n}","import fetch from 'cross-fetch'\nimport {\n    ACTION_SELECT_ORDER,\n    FETCH_ORDERS_SUCCESS,\n    FETCH_ORDERS_ERROR,\n    FETCH_ORDERS_REQUEST,\n    SEND_ORDERS_ERROR,\n    SEND_ORDERS_SUCCESS\n} from './actionTitles';\n\n\nexport const sendOrders = (orders) => {\n    return dispatch => {\n        dispatch(sendOrdersError(orders));\n        const selectedOrders = orders.filter(o => o.isChecked);\n        sendPostOrdersRequest(selectedOrders, dispatch);\n    }\n};\n\nasync function sendPostOrdersRequest(orders, dispatch) {\n    try {\n        const response = await fetch('http://localhost:3003/api/orders', {\n            method: 'POST', // или 'PUT'\n            body: JSON.stringify({ orders }),\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        });\n        const json = await response.json();\n        return {\n            type: SEND_ORDERS_SUCCESS,\n            payload: json.data\n        };\n    } catch (error) {\n        dispatch(sendOrdersError());\n    };\n}\n\nfunction sendOrdersError() {\n    return {\n        type: SEND_ORDERS_ERROR,\n        payload: []\n    };\n}\n\n\n\n\nexport const getOrders = (orders) => {\n    return dispatch => {\n        dispatch(fetchOrdersRequest(orders));\n        return fetch('http://localhost:3003/api/orders')\n            .then(response => response.json())\n            .then(data => dispatch(receiveOrders(data)))\n            .catch(err => dispatch(fetchOrdersError()))\n    }\n};\n\nfunction receiveOrders(items) {\n    let orders = JSON.parse(JSON.stringify(items));\n    orders = orders.map(item => {\n        item['isChecked'] = false;\n        return item;\n    })\n    return {\n        type: FETCH_ORDERS_SUCCESS,\n        payload: orders\n    }\n}\n\nfunction fetchOrdersError() {\n    return {\n        type: FETCH_ORDERS_ERROR,\n        payload: []\n    };\n}\n\nfunction fetchOrdersRequest(orders) {\n    return {\n        type: FETCH_ORDERS_REQUEST,\n        payload: orders\n    };\n}\n\nexport const selectOrder = (orders, name) => {\n    console.log(orders);\n    orders = orders.map((order) => {\n        const tempName = order.productName.toLowerCase();\n        if (tempName === name.toLowerCase()) {\n            order.isChecked = !order.isChecked;\n        }\n        return order;\n    });\n    return {\n        type: ACTION_SELECT_ORDER,\n        payload: orders\n    };\n};","export const AUTHORISATION_REQUEST = 'AUTHORISATION_REQUEST';\nexport const AUTHORISATION_SUCCESS = 'AUTHORISATION_SUCCESS';\nexport const AUTHORISATION_ERROR = 'AUTHORISATION_ERROR';\n\nexport const INITIAL_PROFILE_REQUEST = 'INITIAL_PROFILE_REQUEST';\nexport const INITIAL_PROFILE_SUCCESS = 'INITIAL_PROFILE_SUCCESS';\nexport const INITIAL_PROFILE_ERROR = 'INITIAL_PROFILE_ERROR';\n\nexport const FETCH_ORDERS_REQUEST = 'FETCH_ORDERS_REQUEST';\nexport const FETCH_ORDERS_SUCCESS = 'FETCH_ORDERS_SUCCESS';\nexport const FETCH_ORDERS_ERROR = 'FETCH_ORDERS_ERROR';\n\nexport const SEND_ORDERS_REQUEST = 'SEND_ORDERS_REQUEST';\nexport const SEND_ORDERS_SUCCESS = 'SEND_ORDERS_SUCCESS';\nexport const SEND_ORDERS_ERROR = 'SEND_ORDERS_ERROR';\n\nexport const ACTION_SELECT_ORDER = 'ACTION_SELECT_ORDER';","import React from 'react';\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\nimport Refresh from '@material-ui/icons/Refresh';\nimport Button from '@material-ui/core/Button';\nimport { Grid } from '@material-ui/core';\nimport { bindActionCreators } from \"redux\";\nimport { connect } from 'react-redux';\nimport {getOrders} from '../store/actions';\n\n\n\nconst useStyles = makeStyles((theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n    },\n    title: {\n      flexGrow: 1,\n    },\n    button: {\n        margin: \"100px 10px 20px 0px\"\n    }\n  }),\n);\n\nexport function NavBar(props) {\n  const classes = useStyles();\n\n  const { getOrders, orders } = props;\n\n\n  return (\n      <Grid \n        container \n        direction=\"row\"\n        justify=\"flex-start\">\n         \n        <Button\n          variant=\"outlined\"\n          color=\"primary\"\n          className={classes.button}\n          endIcon={<Refresh></Refresh>}\n          onClick={() => { getOrders(orders) }}\n        >\n          Update Orders\n        </Button>\n      </Grid>         \n      \n  );\n}\n\n\nconst putStateToProps = (state) =>  {\n  return {\n      orders: state.orders\n  }\n};\n\nconst putActionsToProps = (dispatch) => {\n  return {\n      getOrders: bindActionCreators(getOrders, dispatch)\n  };\n};\n\nexport default connect(putStateToProps, putActionsToProps)(NavBar)\n","import React, { useEffect } from 'react';\nimport NavBar from './NavBar';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { bindActionCreators } from \"redux\";\nimport { connect } from 'react-redux';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport SendIcon from '@material-ui/icons/Send';\nimport {getOrders, selectOrder, sendOrders} from '../store/actions';\n\n\n\nconst useStyles = makeStyles({\n    table: {\n        minWidth: 650,\n        maxWidth: 1300,\n        margin: '0 auto',\n    },\n    button: {\n        marginTop: 50,\n        marginBottom: 50,\n        padding: '10px 30px'\n    },\n    selected: {\n        backgroundColor: '#0080000f'\n    },\n    none: {\n        backgroundColor: 'none'\n    },\n    \n\n});\n\nexport function Orders(props) {\n    const classes = useStyles();\n\n    const { sendOrders, getOrders, selectOrder, orders} = props;\n\n    function isDisabled() {\n        return !orders.filter((order) => order.isChecked).length;\n    }\n\n    useEffect(() => {\n        getOrders([]);   \n    }, []);\n\n    return (\n        <Grid item xs={12}>\n            <NavBar></NavBar>\n            <TableContainer component={Paper}>\n                <Table className={classes.table} aria-label=\"simple table\">\n                    <TableHead>\n                        <TableRow >\n                            <TableCell>Select</TableCell>\n                            <TableCell>Order Id</TableCell>\n                            <TableCell align=\"center\">Product Name</TableCell>\n                            <TableCell align=\"center\">SKU</TableCell>\n                            <TableCell align=\"center\">Base Price</TableCell>\n                            <TableCell align=\"center\">Quantity</TableCell>\n                            <TableCell align=\"center\">Location</TableCell>\n                            <TableCell align=\"center\">Customer Name</TableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {orders.map((row, i) => (\n                            <TableRow className={row.isChecked ? classes.selected : classes.none} onClick={(event) => selectOrder(orders, row.productName)} key={i}>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    <Checkbox checked={row.isChecked} value={row.isChecked}></Checkbox>\n                                </TableCell>\n                                <TableCell component=\"th\" scope=\"row\">{row.id}</TableCell>\n                                <TableCell align=\"center\">{row.productName}</TableCell>\n                                <TableCell align=\"center\">{row.sku || '-'}</TableCell>\n                                <TableCell align=\"center\">{row.basePrice}</TableCell>\n                                <TableCell align=\"center\">{row.quantity}</TableCell>\n                            <TableCell align=\"center\">{row.country}, {row.city}</TableCell>\n                            <TableCell align=\"center\">{row.first_name} {row.last_name}</TableCell>\n                            </TableRow>\n                        ))}\n                    </TableBody>\n                </Table>\n            </TableContainer>\n            <Button\n                variant=\"contained\"\n                color=\"primary\"\n                disabled={isDisabled()}\n                className={classes.button}\n                endIcon={<SendIcon></SendIcon>}\n                onClick={(event) => sendOrders(orders)}\n            >\n                Send\n            </Button>\n        </Grid>\n    );\n}\n\nconst putStateToProps = (state) =>  {\n    return {\n        orders: state.orders\n    }\n};\n\nconst putActionsToProps = (dispatch) => {\n    return {\n        selectOrder: bindActionCreators(selectOrder, dispatch),\n        getOrders: bindActionCreators(getOrders, dispatch),\n        sendOrders: bindActionCreators(sendOrders, dispatch)\n    };\n};\n\nexport default connect(putStateToProps, putActionsToProps)(Orders)\n","import React from 'react';\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\n\n\nconst useStyles = makeStyles((theme) =>\n  createStyles({\n    marginTop: {\n      marginTop: 100,\n    }\n  }),\n);\n\nexport default function EmailTemplates() {\n  const classes = useStyles();\n\n  return(\n    <div className={classes.marginTop}>\n      <h2>\n        Comming soon...\n      </h2>\n    </div>\n  );\n}","import React from 'react';\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) =>\n  createStyles({\n    marginTop: {\n      marginTop: 100,\n    }\n  }),\n);\n\nexport default function History() {\n  const classes = useStyles();\n\n  return(\n    <div className={classes.marginTop}>\n      <h2>\n        Comming soon...\n      </h2>\n    </div>\n  );\n}","import React from 'react';\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\n\n\n\nconst useStyles = makeStyles((theme) =>\n  createStyles({\n    marginTop: {\n      marginTop: 100,\n    }\n  }),\n);\n\nexport default function ContactUs() {\n  const classes = useStyles();\n\n  return(\n    <div className={classes.marginTop}>\n      <h2>\n        Comming soon...\n      </h2>\n    </div>\n  );\n}","import React from 'react';\nimport './App.css';\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport { rootReducer } from './store/reducers';\nimport Orders from './components/Orders';\nimport Grid from '@material-ui/core/Grid';\nimport Drawer from '@material-ui/core/Drawer';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MailIcon from '@material-ui/icons/Mail';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Hidden from '@material-ui/core/Hidden';\nimport List from '@material-ui/core/List';\nimport AppBar from '@material-ui/core/AppBar';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport HistoryIcon from '@material-ui/icons/History';\nimport { Switch, Route, Router, Link } from 'react-router-dom';\nimport { createBrowserHistory } from \"history\";\nimport 'react-sidebar-ui/dist/index.css';\nimport EmailTemplates from './components/EmailTemplates';\nimport History from './components/History';\nimport ContactUs from './components/ContactUs';\nimport thunkMiddleware from 'redux-thunk';\nimport { createLogger } from 'redux-logger'\n\nconst loggerMiddleware = createLogger()\n\nconst store = createStore(\n  rootReducer,\n  applyMiddleware(\n    thunkMiddleware, // lets us dispatch() functions\n    loggerMiddleware // neat middleware that logs actions\n  )\n);\nconst history = createBrowserHistory();\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  drawer: {\n    [theme.breakpoints.up('sm')]: {\n      width: drawerWidth,\n      flexShrink: 0,\n    },\n  },\n  appBar: {\n    [theme.breakpoints.up('sm')]: {\n      width: `calc(100% - ${drawerWidth}px)`,\n      marginLeft: drawerWidth,\n    },\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up('sm')]: {\n      display: 'none',\n    },\n  },\n  // necessary for content to be below app bar\n  toolbar: theme.mixins.toolbar,\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n  },\n  initialisation: {\n    top: '0px',\n    left: '0px',\n    width: '100vw',\n    height: '100%',\n    margin: '0 auto',\n    position: 'absolute',\n    backgroundColor: 'white',\n    zIndex: 10000,\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    fontSize: '2.5em'\n  }\n}));\n\nfunction App(props) {\n    const { window } = props;\n    const classes = useStyles();\n    const theme = useTheme();\n    const [mobileOpen, setMobileOpen] = React.useState(false);\n\n    const handleDrawerToggle = () => {\n        setMobileOpen(!mobileOpen);\n    };\n\n    const links = [\n        {\n            link: '/',\n            text: 'Orders'\n        },\n        {\n            link: '/templates',\n            text: 'Email templates'\n        },\n        {\n            link: '/History',\n            text: 'History'\n        },\n        {\n            link: '/contact-us',\n            text: 'Contact Us'\n        },\n    ]\n\n    const drawer = (\n        <div>\n          <div className={classes.toolbar} />\n          <List>\n            {links.map((item, index) => (\n              <Link to={item.link} key={index}>\n                <ListItem button key={item.text} >\n                    <ListItemIcon>{index % 2 === 0 ? <HistoryIcon /> : <MailIcon />}</ListItemIcon>\n                    <ListItemText primary={item.text} />\n                </ListItem>\n              </Link>\n            ))}\n          </List>\n        </div>\n      );\n    \n\n    const container = window !== undefined ? () => window().document.body : undefined;\n\n    return (\n        <Provider store={store}>\n            <div className=\"App\">\n            <div className={classes.initialisation}>\n              <span>App initialisation...</span>\n            </div>\n            <CssBaseline />\n            <AppBar position=\"fixed\" className={classes.appBar}>\n                <Toolbar>\n                <IconButton\n                    color=\"inherit\"\n                    aria-label=\"open drawer\"\n                    edge=\"start\"\n                    onClick={handleDrawerToggle}\n                    className={classes.menuButton}\n                >\n                    <HistoryIcon />\n                </IconButton>\n                <Typography variant=\"h6\" noWrap>\n                    Mail Me\n                </Typography>\n                </Toolbar>\n            </AppBar>\n                <Router history={history}>\n                    <Grid container spacing={3}>\n                        <Grid item md={3} sm={4}>\n                        <nav className={classes.drawer} aria-label=\"mailbox folders\">\n                            {/* The implementation can be swapped with js to avoid SEO duplication of links. */}\n                            <Hidden smUp implementation=\"css\">\n                            <Drawer\n                                container={container}\n                                variant=\"temporary\"\n                                anchor={theme.direction === 'rtl' ? 'right' : 'left'}\n                                open={mobileOpen}\n                                onClose={handleDrawerToggle}\n                                classes={{\n                                paper: classes.drawerPaper,\n                                }}\n                                ModalProps={{\n                                keepMounted: true, // Better open performance on mobile.\n                                }}\n                            >\n                                {drawer}\n                            </Drawer>\n                            </Hidden>\n                            <Hidden xsDown implementation=\"css\">\n                            <Drawer\n                                classes={{\n                                paper: classes.drawerPaper,\n                                }}\n                                variant=\"permanent\"\n                                open\n                            >\n                                {drawer}\n                            </Drawer>\n                            </Hidden>\n                        </nav>\n                        </Grid>\n                        <Grid item xs={8}>\n                            <Switch>\n                                <Route path=\"/templates\">\n                                    <EmailTemplates/>\n                                </Route>\n                                <Route path=\"/history\">\n                                    <History/>\n                                </Route>\n                                <Route path=\"/contact-us\">\n                                    <ContactUs/>\n                                </Route>\n                                <Route path=\"/templates\">\n                                    <EmailTemplates/>\n                                </Route>\n                                <Route path=\"/\">\n                                    <Orders/>\n                                </Route>\n                            </Switch>\n                        </Grid>\n                    </Grid>\n                </Router>\n            </div>\n        </Provider>\n    );\n}\n  \nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}